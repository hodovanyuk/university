%TITLE "Процедуры ввода-вывода строк — by Tom Swan"

        IDEAL

        MODEL small

;-----Макроопределения

BufSize EQU 255                 ; максимальный размер строки (<=255)
ASCnull EQU 0                   ; ASCII нуль
ASCcr   EQU 13                  ; ASCII-символ возврата каретки
ASClf   EQU 10                  ; ASCII-символ прогона строки

;----- Структура буфера для DOS функции 0Аh
STRUC   StrBuffer
maxlen  db BufSize              ; максимальная длина буфера
strlen  db 0                    ; длина строки
chars   db BufSize DUP (?)      ; буфер для StrRead
ENDS    StrBuffer

        DATASEG

buffer  StrBuffer <>            ; переменная буфера для ReadStr

        CODESEG

; ----- из: STRINGS.OBJ

        EXTRN StrLength:proc, StrCopy:proc

        PUBLIC StrRead, StrWrite, StrWrite2, NewLine

; ------------------------------------------------------------------
; StrRead Чтение строки с редактированием
; Вход:
; DI = адрес строки назначения
; CL = максимальная длина строки, включая нулевой ограничитель
; Замечание: если CL = 0, StrRead ничего не делает
; Замечание: переменная буфера должна иметь длину CL+1 байт
; Замечание: длина строки ограничена 255 символами
; Выход:
; строка, скопированная со стандартного устройства ввода в ваш буфер
; Регистры:
; не используются
; ------------------------------------------------------------------
PROC    StrRead
        or CL,CL                ; CL = О?
        jz @@99                 ; eсли да, переход на exit

        push AX                 ; сохранить изменяемые регистры
        push BX
        push DX
        push SI

        mov [buffer.maxlen],CL  ; установить байт maxlen
        mov AH,0Ah              ; функция DOS чтения из буфера
        mov DX,offset buffer.maxlen   ; поместить адрес struc в DS:DX
        int 21h                 ; вызов DOS для чтения строки
        xor BH,BH               ; обнулить старший байт BX
        mov BL,[buffer.strlen]  ; BX = # chars в буфере
        mov [BX+buffer.chars],ASCnull ; изменить cr на null
        mov SI,offset buffer.chars    ; поместить адрес буфера в SI
        call StrCopy            ; скопировать chars в строку пользователя
        pop SI                  ; восстановить регистры
        pop DX
        pop BX
        pop AX
@@99:
        ret                     ; возврат в вызывающую программу
ENDP    StrRead

; ------------------------------------------------------------------
; StrWrite/StrWrite2 Записать строку на стандартное устройство вывода ; Вход:
; DI = адрес строки (s)
; CX = количество записываемых символов (только для StrWrite2)
; Выход:
; строка s копируется на стандартное устройство вывода
; Регистры:
; CX (только для StrWrite)
; ------------------------------------------------------------------
PROC    StrWrite
        call StrLength          ; установить CX = длина строки

PROC    StrWrite2               ; переменная точка входа
        push AX                 ; сохранить изменяемые регистры
        push BX
        push DX

        mov BX,1                ; стандартное устройство вывода
        mov DX,di               ; строка адресуется в DS:DX
        mov AH,40h              ; DOS запись в файл или на устройство
        int 21h                 ; вызов DOS (on ret AX=# chars written)

        pop DX                  ; восстановить регистры
        pop BX
        pop AX
        ret                     ; возврат в вызывающую программу
ENDP    StrWrite2               ; конец промежуточной процедуры
ENDP    StrWrite                ; конец обычной процедуры

; ------------------------------------------------------------------
; NewLme Перейти на новую строку на стандартном устройстве вывода
; Вход:
; нет
; Выход:
; на устройство вывода посылается символ возврата каретки
;    и прогона строки
; Регистры:
; AH, DL
; ------------------------------------------------------------------
PROC    NewLine
        mov AH,2                ; функция записи символа DOS
        mov DL,ASCcr            ; загрузить в DL символ возврата каретки
        int 21h                 ; вывести символ возврата каретки
        mov DL,ASClf            ; загрузить в DL символ прогона строки
        int 21h                 ; вывести символ прогона строки
        ret                     ; возврат в вызывающую программу
ENDP    NewLine

        END                     ; конец модуля STRIО
