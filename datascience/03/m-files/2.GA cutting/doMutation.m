function [CH,CHF]=doMutation(CH,CHF,PLATE,ORDER,PERC)
% Побудова нової популяції з використанням мутації
% Мутація здійснюється випадковим вибором та розворотом пластинки
% Аргументи: 
%       CH    - хромосоми
%       CHF   - значення фітнесу хромосом
%       PLATE - розміри великої пластини
%       ORDER - порядок розміщення пластинок
%       PERC  - кількість мутацій
% Результат:
%       CH  - матриця хромосом
%       CHF - матриця значень фітнесу

% визначаємо кількість хромосом
[m,n]=size(CH);
n=floor(n/5);
% виконуємо мутації
i=1;
while (i<=PERC)
    % вибираємо випадковим чином хромосому
    mCH=floor(rand(1)*m)+1;
    if (mCH>m) mCH=m; end
    % вибираємо випадковим чином пластинку
    nCH=floor(rand(1)*n)+1;
    if (nCH>n) nCH=n; end
    
    % зберігаємо копію хромосоми
    CHCOPY=CH(mCH,:);
    % робимо розворот пластинки
    TEMP=CH(mCH,(nCH-1)*5+4);
    CH(mCH,(nCH-1)*5+4)=CH(mCH,(nCH-1)*5+5);
    CH(mCH,(nCH-1)*5+5)=TEMP;
    % визначаємо позиції пластинок в хромосомі
    CH(mCH,:)=getPositions(CH(mCH,:),PLATE,ORDER);
    if CH(mCH,1)~=0
        % розраховуємо значення фітнесу нової хромосоми
        CHF(mCH,1)=checkFitness(CH(mCH,:),PLATE);
        i=i+1;
    else
        % інакше вертаємо назад стару пластинку
        CH(mCH,:)=CHCOPY;
    end
end
    