function CH = doCrossoverGPMX( CH1,CH2 )
% Выполнение операции двухточечного кроссовера
% GPMX (generalised partially mapped crossover) над хромосомами вида
% "перестановки с повторениями"
% Вход:
%      CH1,CH2 - родительские хромосомы вида "перестановки с повторениями"
% Выход:
%      CH - хромосома-потомок вида "перестановки с повторениями"

% определяем длину хромосом
n = length( CH1 );
% генерируем два случайных индекса для выбора вставляемой подцепочки
m1 = round( rand * (n - 1) + 1 );
m2 = round( rand * (n - 1) + 1 );
% если оба индекса одинаковые - повторяем генерацию
while( m1 == m2  )
    m1 = round( rand * (n - 1) + 1 );
    m2 = round( rand * (n - 1) + 1 );
end
% обмениваем индексы местами, если m2 меньше за m1
if( m1 > m2 ), t = m1; m1 = m2; m2 = t; end

% выделяем переносимую часть из хромосомы 1
part = CH1( m1:m2 );
% подсчитываем количество каждого гена в выделенной части
[ genes,count ] = countGenes( part );
% берем за основу хромосому 2
CH = CH2;
% проходим по каждому типу гена в добавляемой части и удаляем такие гены из
% хромосомы
for i = 1:length( genes )
    % находим индексы очередного гена в хромосоме 1
    idx1 = find( CH1 == genes( i ) );
    % выделяем последовательные номера генов, которые надо удалить
    % idx = find( ( idx1 >= m1 ) & ( idx1 <= m2 ) );
    % находим индексы гена в модифицируемой хромосоме
    idx2 = find( CH == genes( i ) );
    % удаляем гены
    % CH( idx2( idx ) ) = [];
    CH( idx2( ( idx1 >= m1 ) & ( idx1 <= m2 ) ) ) = [];
end
% добавляем в хромосому выбранную часть
if( m1 == 1 )
    CH = [ part CH ];
elseif( m2 == length( CH1 ) )
    CH = [ CH part ];
else
    CH = [ CH( 1:m1-1 ) part CH( m1:end ) ];
end
