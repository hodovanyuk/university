function CH = doCrossoverGOX( CH1,CH2 )
% Выполнение операции двухточечного кроссовера
% GOX (generalised order crossover) над хромосомами вида
% "перестановки с повторениями"
% Вход:
%      CH1,CH2 - родительские хромосомы вида "перестановки с повторениями"
% Выход:
%      CH - хромосома-потомок вида "перестановки с повторениями"

% определяем длину хромосом
n = length( CH1 );
% генерируем два случайных индекса для выбора вставляемой подцепочки
m1 = round( rand * (n - 1) + 1 );
m2 = round( rand * (n - 1) + 1 );
% если оба индекса крайние или одинаковые - повторяем генерацию
while( ( m1 == m2 ) || ...
       ( ismember( m1,[ 1 n ] ) && ismember ( m2,[ 1 n ] ) ) )
    m1 = round( rand * (n - 1) + 1 );
    m2 = round( rand * (n - 1) + 1 );
end
% обмениваем индексы местами, если m2 меньше за m1
if( m1 > m2 ), t = m1; m1 = m2; m2 = t; end

% проверка, захвачен ли конечный ген
if( ismember( m1,[ 1 n ] ) || ismember ( m2,[ 1 n ] ) )
    % захвачен
    % выделяем переносимую часть из хромосомы 2
    part = CH2( m1:m2 );
    % подсчитываем количество каждого гена в выделенной части
    [ genes,count ] = countGenes( part );
    % удаляем из хромосомы гены, которые есть в добавляемой части
    CH = CH1;
    for i = 1:length( genes )
        % находим индексы очередного гена
        idx = find( CH == genes( i ) );
        % выделяем только нужное количество индексов
        idx = idx( 1:count( i ) );
        % удаляем первые count индексов из хромосомы
        CH( idx ) = [];
    end
    % добавляем в начало хромосомы выделенную часть
    CH = [ part CH ];
    % удаляем из хромосомы гены, которые есть в добавляемой с конца части
    for i = 1:length( genes )
        % находим индексы очередного гена
        idx = find( CH == genes( i ) );
        % выделяем только нужное количество индексов
        idx = idx( length( idx ) - count( i ) + 1:length( idx ) );
        % удаляем последние count индексов из хромосомы
        CH( idx ) = [];
    end
    % добавляем в конец хромосомы выделенную часть
    CH = [ CH part ];
else
    % конечный ген не захвачен
    % генерируем индекс разрыва хромосомы
    m = round( rand * (n - 2) + 2 );
    % выделяем переносимую часть из хромосомы 2
    part = CH2( m1:m2 );
    % подсчитываем количество каждого гена в выделенной части
    [ genes,count ] = countGenes( part );
    % удаляем из хромосомы, начиная с конца, гены, которые есть в
    % добавляемой части
    CH = CH1;
    for i = 1:length( genes )
        % находим индексы очередного гена
        idx = find( CH == genes( i ) );
        % выделяем только нужное количество индексов
        idx = idx( length( idx ) - count( i ) + 1:length( idx ) );
        % корректируем индекс точки разрыва
        m = m - sum( idx < m );
        % удаляем последние count индексов из хромосомы
        CH( idx ) = [];
    end
    % добавляем в хромосому выделенную часть
    CH = [ CH( 1:m-1 ) part CH( m:end ) ];
end
